// WARNING: This file is autogenerated and should NOT be modified
{
    "build": "4c4d52c",
    "configHash": "8eb90d1d4c67014f8ce9dc514280f53e04098eb8595c844fd3acca0f10e5a7a4",
    "tasks": {
        "compile": {
            "name": "@taqueria/plugin-ligo",
            "type": "npm"
        },
        "test": {
            "name": "@taqueria/plugin-ligo",
            "type": "npm"
        },
        "typecheck": {
            "name": "@taqueria/plugin-tezos-client",
            "type": "npm"
        },
        "simulate": {
            "name": "@taqueria/plugin-tezos-client",
            "type": "npm"
        },
        "deploy": {
            "name": "@taqueria/plugin-taquito",
            "type": "npm"
        },
        "transfer": {
            "name": "@taqueria/plugin-taquito",
            "type": "npm"
        },
        "generate types": {
            "name": "@taqueria/plugin-contract-types",
            "type": "npm"
        }
    },
    "operations": {},
    "templates": {
        "contract": {
            "name": "@taqueria/plugin-ligo",
            "type": "npm"
        }
    },
    "plugins": [
        {
            "name": "@taqueria/plugin-ligo",
            "version": "0.1",
            "schema": "1.0",
            "alias": "ligo",
            "tasks": [
                {
                    "task": "compile",
                    "command": "compile <sourceFile>",
                    "aliases": [
                        "c",
                        "compile-ligo"
                    ],
                    "description": "Compile a smart contract written in a LIGO syntax to Michelson code, along with its associated storages and parameters files if they are found",
                    "encoding": "json",
                    "handler": "proxy",
                    "options": []
                },
                {
                    "task": "test",
                    "command": "test <sourceFile>",
                    "description": "Test a smart contract written in LIGO",
                    "encoding": "json",
                    "handler": "proxy",
                    "options": []
                }
            ],
            "operations": [],
            "templates": [
                {
                    "template": "contract",
                    "command": "contract <sourceFileName>",
                    "description": "Create a LIGO contract with boilerplate code",
                    "options": [
                        {
                            "shortFlag": "s",
                            "flag": "syntax",
                            "description": "The syntax used in the contract",
                            "type": "string"
                        }
                    ],
                    "positionals": [
                        {
                            "placeholder": "sourceFileName",
                            "description": "The name of the LIGO contract to generate",
                            "type": "string"
                        }
                    ],
                    "handler": "function",
                    "encoding": "none"
                }
            ]
        },
        {
            "name": "@taqueria/plugin-tezos-client",
            "version": "0.1",
            "schema": "1.0",
            "alias": "tezos-client",
            "tasks": [
                {
                    "task": "typecheck",
                    "command": "typecheck <sourceFile>",
                    "aliases": [
                        "tc"
                    ],
                    "description": "Typecheck a Michelson contract",
                    "encoding": "json",
                    "handler": "proxy",
                    "options": [],
                    "positionals": [
                        {
                            "placeholder": "sourceFile",
                            "description": "The name of the Michelson contract you wish to typecheck"
                        }
                    ]
                },
                {
                    "task": "simulate",
                    "command": "simulate <sourceFile>",
                    "aliases": [
                        "sim"
                    ],
                    "description": "Run a Michelson contract as a simulation",
                    "encoding": "json",
                    "handler": "proxy",
                    "options": [
                        {
                            "flag": "storage",
                            "description": "Name of the storage file that contains the storage value as a Michelson expression, in the artifacts directory, used for originating a contract",
                            "required": false
                        },
                        {
                            "flag": "param",
                            "description": "Name of the parameter file that contains the parameter value as a Michelson expression, in the artifacts directory, used for invoking a deployed contract",
                            "required": true
                        },
                        {
                            "flag": "entrypoint",
                            "description": "You may explicitly specify an entrypoint to make the parameter value shorter, without having to specify a chain of (Left (Right ... 14 ...))",
                            "required": false
                        }
                    ],
                    "positionals": [
                        {
                            "placeholder": "sourceFile",
                            "description": "The name of the Michelson contract you wish to simulate"
                        }
                    ]
                }
            ],
            "operations": [],
            "templates": []
        },
        {
            "name": "@taqueria/plugin-taquito",
            "version": "0.1",
            "schema": "1.0",
            "alias": "taquito",
            "tasks": [
                {
                    "task": "deploy",
                    "command": "deploy <contract>",
                    "aliases": [
                        "originate"
                    ],
                    "description": "Deploy a smart contract to a particular environment",
                    "encoding": "application/json",
                    "handler": "proxy",
                    "options": [
                        {
                            "flag": "alias",
                            "description": "Alias used to refer to the deployed contract's address",
                            "required": false
                        },
                        {
                            "flag": "storage",
                            "description": "Name of the storage file that contains the storage value as a Michelson expression, in the artifacts directory, used for originating a contract",
                            "required": false
                        }
                    ]
                },
                {
                    "task": "transfer",
                    "command": "transfer <contract>",
                    "aliases": [
                        "call"
                    ],
                    "description": "Transfer/call an implicit account or a smart contract (specified via its alias or address) deployed to a particular environment",
                    "encoding": "application/json",
                    "handler": "proxy",
                    "options": [
                        {
                            "flag": "tez",
                            "description": "Amount of Tez to transfer",
                            "required": false
                        },
                        {
                            "flag": "param",
                            "description": "Name of the parameter file that contains the parameter value as a Michelson expression, in the artifacts directory, used for invoking a deployed contract",
                            "required": false
                        },
                        {
                            "flag": "entrypoint",
                            "description": "You may explicitly specify an entrypoint to make the parameter value shorter, without having to specify a chain of (Left (Right ... 14 ...))",
                            "required": false
                        }
                    ]
                }
            ],
            "operations": [],
            "templates": []
        },
        {
            "name": "@taqueria/plugin-contract-types",
            "version": "0.1",
            "schema": "1.0",
            "alias": "contract-types",
            "tasks": [
                {
                    "task": "generate types",
                    "command": "generate types [typescriptDir]",
                    "aliases": [
                        "gen types",
                        "gentypes"
                    ],
                    "description": "Generate types for a contract to be used with taquito",
                    "handler": "proxy",
                    "options": [
                        {
                            "shortFlag": "t",
                            "flag": "typeAliasMode",
                            "description": "The type aliases used in the generated types",
                            "choices": [
                                "file",
                                "simple"
                            ]
                        }
                    ],
                    "positionals": [
                        {
                            "placeholder": "typescriptDir",
                            "description": "The output directory for the generated type files",
                            "defaultValue": "types"
                        }
                    ]
                }
            ],
            "operations": [],
            "templates": []
        }
    ]
}