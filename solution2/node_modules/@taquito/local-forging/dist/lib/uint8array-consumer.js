"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Uint8ArrayConsumer = void 0;
const error_1 = require("./error");
class Uint8ArrayConsumer {
    constructor(arr, offset = 0) {
        this.arr = arr;
        this.offset = offset;
    }
    static fromHexString(hex) {
        const lowHex = hex.toLowerCase();
        if (/^(([a-f]|\d){2})*$/.test(lowHex)) {
            const arr = new Uint8Array((lowHex.match(/([a-z]|\d){2}/g) || []).map((byte) => parseInt(byte, 16)));
            return new Uint8ArrayConsumer(arr);
        }
        else {
            throw new error_1.InvalidHexStringError(lowHex);
        }
    }
    consume(count) {
        const subArr = this.arr.subarray(this.offset, this.offset + count);
        this.offset += count;
        return subArr;
    }
    get(idx) {
        return this.arr[this.offset + idx];
    }
    length() {
        return this.arr.length - this.offset;
    }
}
exports.Uint8ArrayConsumer = Uint8ArrayConsumer;
//# sourceMappingURL=uint8array-consumer.js.map