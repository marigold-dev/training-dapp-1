import { MichelsonValue } from '../michelson/codec';
import { Uint8ArrayConsumer } from '../uint8array-consumer';
export declare const parametersDecoderProto13: (val: Uint8ArrayConsumer) => {
    entrypoint: string;
    value: string | number | object | undefined;
} | undefined;
export declare const valueParameterDecoderProto13: (val: Uint8ArrayConsumer) => string | number | object | undefined;
export declare const entrypointEncoderProto13: (entrypoint: string) => string;
export declare const entrypointNameEncoderProto13: (entrypoint: string) => string;
export declare const entrypointNameDecoderProto13: (val: Uint8ArrayConsumer) => string;
export declare const parametersEncoderProto13: (val: {
    entrypoint: string;
    value: MichelsonValue;
}) => string;
export declare const valueParameterEncoderProto13: (value: MichelsonValue) => string;
export declare const txRollupOriginationParamEncoderProto13: (_value: string) => string;
export declare const txRollupOriginationParamDecoderProto13: (_val: Uint8ArrayConsumer) => {};
export declare const txRollupIdEncoderProto13: (str: string) => string;
export declare const txRollupIdDecoderProto13: (str: Uint8ArrayConsumer) => string;
export declare const txRollupBatchContentEncoderProto13: (value: string) => string;
export declare const txRollupBatchContentDecoderProto13: (val: Uint8ArrayConsumer) => string;
export declare const burnLimitEncoder: (val: string) => string;
export declare const burnLimitDecoder: (value: Uint8ArrayConsumer) => string | undefined;
