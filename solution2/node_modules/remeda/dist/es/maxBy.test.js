import { maxBy } from './maxBy';
import { pipe } from './pipe';
var array = [{ a: 2 }, { a: 5 }, { a: 1 }, { a: 4 }];
var expected = { a: 5 };
describe('data first', function () {
    test('maxBy', function () {
        expect(maxBy(array, function (x) { return x.a; })).toEqual(expected);
    });
    test('maxBy.indexed', function () {
        expect(maxBy.indexed(array, function (x, idx) { return x.a + idx; })).toEqual({ a: 4 });
    });
});
describe('data last', function () {
    test('maxBy', function () {
        var actual = pipe(array, maxBy(function (x) { return x.a; }));
        expect(actual).toEqual(expected);
    });
    test('maxBy.indexed', function () {
        var actual = pipe(array, maxBy.indexed(function (x, idx) { return x.a + idx; }));
        expect(actual).toEqual({ a: 4 });
    });
});
