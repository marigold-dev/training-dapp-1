import { forEachObj } from './forEachObj';
import { pipe } from './pipe';
var obj = {
    a: 1,
    b: 2,
    c: 3,
};
describe('data_first', function () {
    it('forEachObj', function () {
        var cb = jest.fn();
        var result = forEachObj(obj, cb);
        expect(cb.mock.calls).toEqual([[1], [2], [3]]);
        expect(result).toEqual(obj);
    });
    it('forEachObj.indexed', function () {
        var cb = jest.fn();
        var result = forEachObj.indexed(obj, cb);
        expect(cb.mock.calls).toEqual([
            [1, 'a', obj],
            [2, 'b', obj],
            [3, 'c', obj],
        ]);
        expect(result).toEqual(obj);
    });
});
describe('data_last', function () {
    it('forEachObj', function () {
        var cb = jest.fn();
        var result = pipe(obj, forEachObj(cb));
        expect(cb.mock.calls).toEqual([[1], [2], [3]]);
        expect(result).toEqual(obj);
    });
    it('forEachObj.indexed', function () {
        var cb = jest.fn();
        var result = pipe(obj, forEachObj.indexed(cb));
        expect(cb.mock.calls).toEqual([
            [1, 'a', obj],
            [2, 'b', obj],
            [3, 'c', obj],
        ]);
        expect(result).toEqual(obj);
    });
});
