import { flatMapToObj } from './flatMapToObj';
import { pipe } from './pipe';
describe('data_first', function () {
    it('flatMapToObj', function () {
        var result = flatMapToObj([1, 2, 3], function (x) {
            return x % 2 === 1 ? [[String(x), x]] : [];
        });
        expect(result).toEqual({ 1: 1, 3: 3 });
    });
    it('flatMapToObj.indexed', function () {
        var result = flatMapToObj.indexed(['a', 'b'], function (x, i) { return [
            [x, i],
            [x + x, i + i],
        ]; });
        expect(result).toEqual({ a: 0, aa: 0, b: 1, bb: 2 });
    });
});
describe('data_last', function () {
    it('flatMapToObj', function () {
        var result = pipe([1, 2, 3], flatMapToObj(function (x) { return (x % 2 === 1 ? [[String(x), x]] : []); }));
        expect(result).toEqual({ 1: 1, 3: 3 });
    });
    it('flatMapToObj.indexed', function () {
        var result = pipe(['a', 'b'], flatMapToObj.indexed(function (x, i) { return [
            [x, i],
            [x + x, i + i],
        ]; }));
        expect(result).toEqual({ a: 0, aa: 0, b: 1, bb: 2 });
    });
});
