var __spreadArrays = (this && this.__spreadArrays) || function () {
    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
    for (var r = Array(s), k = 0, i = 0; i < il; i++)
        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
            r[k] = a[j];
    return r;
};
import { fromPairs } from './fromPairs';
var tuples = [
    ['a', 1],
    ['b', 2],
    ['c', 3],
];
describe('fromPairs', function () {
    test('generates object from pairs', function () {
        expect(fromPairs(tuples)).toEqual({
            a: 1,
            b: 2,
            c: 3,
        });
    });
    test('ignores non-tuples', function () {
        var badInput = __spreadArrays(tuples, [undefined, [], [2]]);
        expect(fromPairs(badInput)).toEqual({
            a: 1,
            b: 2,
            c: 3,
        });
    });
});
describe('typings', function () {
    test('arrays', function () {
        var actual = fromPairs(tuples);
        var result = true;
        expect(result).toBe(true);
    });
    test('arrays with mixed type value', function () {
        var actual = fromPairs([
            ['a', 2],
            ['b', 'c'],
        ]);
        var result = true;
        expect(result).toBe(true);
    });
});
