import { sortBy } from './sortBy';
import { pipe } from './pipe';
var items = [{ a: 1 }, { a: 3 }, { a: 7 }, { a: 2 }];
var sorted = [{ a: 1 }, { a: 2 }, { a: 3 }, { a: 7 }];
var objects = [
    { id: 1, color: 'red', weight: 2, active: true, date: new Date(2021, 1, 1) },
    { id: 2, color: 'blue', weight: 3, active: false, date: new Date(2021, 1, 2) },
    { id: 3, color: 'green', weight: 1, active: false, date: new Date(2021, 1, 3) },
    { id: 4, color: 'purple', weight: 1, active: true, date: new Date(2021, 1, 4) },
];
describe('data first', function () {
    test('sort correctly', function () {
        expect(sortBy(items, function (x) { return x.a; })).toEqual(sorted);
    });
    test('sort booleans correctly', function () {
        expect(sortBy(objects, [function (x) { return x.active; }, 'desc']).map(function (x) { return x.active; })).toEqual([true, true, false, false]);
    });
    test('sort dates correctly', function () {
        expect(sortBy(objects, [function (x) { return x.date; }, 'desc']).map(function (x) { return x.id; })).toEqual([4, 3, 2, 1]);
    });
    test('sort objects correctly', function () {
        expect(sortBy(objects, function (x) { return x.weight; }, function (x) { return x.color; }).map(function (x) { return x.weight; })).toEqual([1, 1, 2, 3]);
    });
    test('sort objects correctly mixing sort pair and sort projection', function () {
        expect(sortBy(objects, function (x) { return x.weight; }, [function (x) { return x.color; }, 'asc']).map(function (x) { return x.weight; })).toEqual([1, 1, 2, 3]);
    });
    test('sort objects descending correctly', function () {
        expect(sortBy(objects, [function (x) { return x.weight; }, 'desc']).map(function (x) { return x.weight; })).toEqual([
            3, 2, 1, 1,
        ]);
    });
});
describe('data last', function () {
    test('sort correctly', function () {
        expect(pipe(items, sortBy(function (x) { return x.a; }))).toEqual(sorted);
    });
    test('sort objects correctly', function () {
        var sortFn = sortBy(function (x) { return x.weight; }, function (x) { return x.color; });
        expect(sortFn(objects).map(function (x) { return x.color; })).toEqual(['green', 'purple', 'red', 'blue']);
    });
    test('sort objects correctly by weight asc then color desc', function () {
        expect(sortBy([function (x) { return x.weight; }, 'asc'], [function (x) { return x.color; }, 'desc'])(objects).map(function (x) { return x.color; })).toEqual(['purple', 'green', 'red', 'blue']);
    });
});
