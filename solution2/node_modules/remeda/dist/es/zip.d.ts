/**
 * Creates a new list from two supplied lists by pairing up equally-positioned items.
 * The length of the returned list will match the shortest of the two inputs.
 * @param first the first input list
 * @param second the second input list
 * @signature
 *   R.zip(first, second)
 * @example
 *   R.zip([1, 2], ['a', 'b']) // => [1, 'a'], [2, 'b']
 * @data_first
 * @category Array
 */
export declare function zip<F extends unknown, S extends unknown>(first: ReadonlyArray<F>, second: ReadonlyArray<S>): Array<[F, S]>;
/**
 * Creates a new list from two supplied lists by pairing up equally-positioned items.
 * The length of the returned list will match the shortest of the two inputs.
 * @param second the second input list
 * @signature
 *   R.zip(second)(first)
 * @example
 *   R.zip(['a', 'b'])([1, 2]) // => [[1, 'a'], [2, 'b']
 * @data_last
 * @category Array
 */
export declare function zip<S extends unknown>(second: ReadonlyArray<S>): <F extends unknown>(first: ReadonlyArray<F>) => Array<[F, S]>;
//# sourceMappingURL=zip.d.ts.map