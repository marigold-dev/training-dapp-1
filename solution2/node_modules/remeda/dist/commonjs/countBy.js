"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.countBy = void 0;
var purry_1 = require("./purry");
var _countBy = function (indexed) { return function (array, fn) {
    return array.reduce(function (ret, item, index) {
        var value = indexed ? fn(item, index, array) : fn(item);
        return ret + (value ? 1 : 0);
    }, 0);
}; };
/**
 * Counts how many values of the collection pass the specified predicate.
 * @param fn The predicate.
 * @signature
 *    R.countBy(fn)(array)
 * @example
 *    R.pipe([1, 2, 3, 4, 5], R.countBy(x => x % 2 === 0)) // => 2
 * @data_last
 * @indexed
 * @category Array
 */
function countBy() {
    return purry_1.purry(_countBy(false), arguments);
}
exports.countBy = countBy;
(function (countBy) {
    function indexed() {
        return purry_1.purry(_countBy(true), arguments);
    }
    countBy.indexed = indexed;
})(countBy = exports.countBy || (exports.countBy = {}));
